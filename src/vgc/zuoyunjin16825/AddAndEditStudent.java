/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vgc.zuoyunjin16825;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @ZuoyunJin16825
 */
public class AddAndEditStudent extends javax.swing.JFrame implements ProgramInterface{

    public AddAndEditStudent() {
        initComponents();
        showStudentData();
    }

    public Connection getConnection() {
        try {
            String dbUrl = "jdbc:mysql://localhost:3306/vgc?useSSL=false";
            String userid = "root";
            String userps = "P6agztsg";
            Connection myConn = DriverManager.getConnection(dbUrl, userid, userps);
            return myConn;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public void refreshTableData(String message) {
        // refresh jtable data
        DefaultTableModel model = (DefaultTableModel) studentTable.getModel();
        model.setRowCount(0);
        showStudentData();

        JOptionPane.showMessageDialog(null, "Data " + message + " Succefully");
    }

    public ArrayList<studentData> studentList() {
        ArrayList<studentData> studentList = new ArrayList();
        Connection myConn = getConnection();
        String sql = "Select Student.*, PaymentAndAttendance.Feesowed,PaymentAndAttendance.Attendance from Student INNER JOIN PaymentAndAttendance On Student.StudentID=PaymentAndAttendance.StudentID";
        try {

            Statement myStmt = myConn.createStatement();
            ResultSet myRs = myStmt.executeQuery(sql);
            studentData studentdDataTable;
            while (myRs.next()) {

                studentdDataTable = new studentData(myRs.getInt("StudentID"), myRs.getInt("PhoneNumber"), myRs.getString("StudentFName"), myRs.getString("StudentLName"), myRs.getString("Address"), myRs.getString("EnrollmenttDate"), myRs.getDouble("Feesowed"), myRs.getString("Attendance"));
                studentList.add(studentdDataTable);
            }
        } catch (Exception exc) {
            exc.printStackTrace();
        }
        return studentList;
    }

    public void showStudentData() {
        ArrayList<studentData> list = studentList();
        DefaultTableModel model = (DefaultTableModel) studentTable.getModel();
        Object[] row = new Object[8];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getSID();
            row[1] = list.get(i).getSFN();
            row[2] = list.get(i).getSLN();
            row[3] = list.get(i).getSADD();
            row[4] = list.get(i).getSPHONE();
            row[5] = list.get(i).getSED();
            row[6] = list.get(i).getFOWED();
            row[7] = list.get(i).getSAT();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        SID = new javax.swing.JTextField();
        SFN = new javax.swing.JTextField();
        SLN = new javax.swing.JTextField();
        SADD = new javax.swing.JTextField();
        SPHONE = new javax.swing.JTextField();
        SED = new javax.swing.JTextField();
        Insert = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        FOWED = new javax.swing.JTextField();
        SAT = new javax.swing.JTextField();
        FOWEDC = new javax.swing.JLabel();
        SEDC = new javax.swing.JLabel();
        SPHONEC = new javax.swing.JLabel();
        SATC = new javax.swing.JLabel();
        SADDC = new javax.swing.JLabel();
        SLNC = new javax.swing.JLabel();
        SIDC = new javax.swing.JLabel();
        SFNC = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Students");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Add New Student By Entering The Detail Below");

        jLabel2.setText("Enter Student ID");

        jLabel3.setText("Enter Student First Name");

        jLabel4.setText("Enter Student  Last Name");

        jLabel5.setText("Enter Student Address");

        jLabel6.setText("Enter Student PhoneNo.");

        jLabel7.setText("Enter Student EnrollmenttDate");

        SID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SIDActionPerformed(evt);
            }
        });

        SFN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SFNActionPerformed(evt);
            }
        });

        SLN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SLNActionPerformed(evt);
            }
        });

        SADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SADDActionPerformed(evt);
            }
        });

        SED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEDActionPerformed(evt);
            }
        });

        Insert.setText("Insert");
        Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertActionPerformed(evt);
            }
        });

        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StudentID", "First Name", "last Name", "Address", "Phone No.", "Enrollment Date", "Feesowed", "Attendance"
            }
        ));
        studentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(studentTable);

        jLabel8.setText("Enter Feesowed");

        jLabel9.setText("Enter Attendance");

        FOWED.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FOWEDActionPerformed(evt);
            }
        });

        SAT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SATActionPerformed(evt);
            }
        });

        FOWEDC.setText("xxx.xx");

        SEDC.setText("YYYY-MM-DD");

        SPHONEC.setText("No more than 10 Numbers");

        SATC.setText("0%-100%");

        SADDC.setText("No more than 30 CH");

        SLNC.setText("No more than 20 CH");

        SIDC.setText("No more than 6 Numbers");

        SFNC.setText("No more than 20 CH");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Insert)
                                .addGap(43, 43, 43)
                                .addComponent(Update)
                                .addGap(50, 50, 50)
                                .addComponent(Reset)
                                .addGap(50, 50, 50)
                                .addComponent(Delete)
                                .addGap(48, 48, 48)
                                .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(65, 65, 65)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(SIDC)
                                                .addComponent(SID, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(FOWEDC)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(SPHONEC)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(SLNC)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addComponent(SLN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(SADD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addComponent(SADDC)
                                                                .addComponent(SPHONE, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addComponent(SED, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(SEDC)
                                                        .addComponent(FOWED, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(SAT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(SATC)))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SFNC)
                                    .addComponent(SFN, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(jLabel1)))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 831, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SIDC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SFN, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SFNC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SLN, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SLNC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SADD, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(SADDC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SPHONE, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SPHONEC)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SED, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SEDC)
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(FOWED, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(FOWEDC)
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SAT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addGap(4, 4, 4)
                                .addComponent(SATC)
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Insert)
                            .addComponent(Update)
                            .addComponent(Reset)
                            .addComponent(Delete)
                            .addComponent(Back))))
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SFNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SFNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SFNActionPerformed

    private void SLNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SLNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SLNActionPerformed

    private void SADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SADDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SADDActionPerformed

    private void InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertActionPerformed
        if (SID.getText().isEmpty() || SFN.getText().isEmpty() || SLN.getText().isEmpty() || SADD.getText().isEmpty() || SPHONE.getText().isEmpty() || SED.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please,enter all fields!");
        } else {
            Connection myConn = getConnection();
            String sql = "insert into Student values (?,?,?,?,?,?)";
            String sql2 = "insert into PaymentAndAttendance values(?,?,?)";

            Pattern pSID = Pattern.compile("\\d{1,6}");
            Matcher mSID = pSID.matcher(SID.getText());
            boolean isSIDValid = mSID.matches();

            Pattern pSFN = Pattern.compile("\\w{1,20}");
            Matcher mSFN = pSFN.matcher(SFN.getText());
            boolean isSFNValid = mSFN.matches();

            Pattern pSLN = Pattern.compile("\\w{1,20}");
            Matcher mSLN = pSLN.matcher(SLN.getText());
            boolean isSLNValid = mSLN.matches();

            Pattern pSADD = Pattern.compile(".{1,30}");
            Matcher mSADD = pSADD.matcher(SADD.getText());
            boolean isSADDValid = mSADD.matches();

            Pattern pSPHONE = Pattern.compile("\\d{1,10}");
            Matcher mSPHONE = pSPHONE.matcher(SPHONE.getText());
            boolean isSPHONEValid = mSPHONE.matches();

            Pattern pSED = Pattern.compile("^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$");
            Matcher mSED = pSED.matcher(SED.getText());
            boolean isSEDValid = mSED.matches();

            Pattern pFOWED = Pattern.compile("\\d{1,7}\\.?\\d{1,2}");
            Matcher mFOWED = pFOWED.matcher(FOWED.getText());
            boolean isFOWEDValid = mFOWED.matches();

            Pattern pSAT = Pattern.compile("\\d{1,3}\\%");
            Matcher mSAT = pSAT.matcher(SAT.getText());
            boolean isSATValid = mSAT.matches();

            if (isSIDValid) {
                SIDC.setText("Valid");
                SIDC.setForeground(Color.BLUE);
            } else {
                SIDC.setText("InValid (1 - 6 DECIMAL Only)");
                SIDC.setForeground(Color.red);
            }
            if (isSFNValid) {
                SFNC.setText("Valid");
                SFNC.setForeground(Color.BLUE);
            } else {
                SFNC.setText("InValid (1 - 20 Charactors Only)");
                SFNC.setForeground(Color.red);
            }
            if (isSLNValid) {
                SLNC.setText("Valid");
                SLNC.setForeground(Color.BLUE);
            } else {
                SLNC.setText("InValid (1 - 20 Charactors Only)");
                SLNC.setForeground(Color.red);
            }
            if (isSADDValid) {
                SADDC.setText("Valid");
                SADDC.setForeground(Color.BLUE);
            } else {
                SADDC.setText("InValid (1 - 30 Charactors Only)");
                SADDC.setForeground(Color.red);
            }
            if (isSPHONEValid) {
                SPHONEC.setText("Valid");
                SPHONEC.setForeground(Color.BLUE);
            } else {
                SPHONEC.setText("InValid (1 - 10 DECIMAL Only)");
                SPHONEC.setForeground(Color.red);
            }

            if (isSEDValid) {
                SEDC.setText("Valid");
                SEDC.setForeground(Color.BLUE);
            } else {
                SEDC.setText("The Foramating MUST BE YYYY-MM-DD)");
                SEDC.setForeground(Color.red);
            }

            if (isFOWEDValid) {
                FOWEDC.setText("Valid");
                FOWEDC.setForeground(Color.BLUE);
            } else {
                FOWEDC.setText("Maximum 7 integer and 2 decimal places");
                FOWEDC.setForeground(Color.red);
            }

            if (isSATValid) {
                SATC.setText("Valid");
                SATC.setForeground(Color.BLUE);
            } else {
                SATC.setText("Number + % Only");
                SATC.setForeground(Color.red);
            }

            if (isSPHONEValid && isSADDValid && isSLNValid && isSFNValid && isSIDValid && isSATValid && isFOWEDValid && isSEDValid) {
                try {

                    PreparedStatement pst = myConn.prepareStatement(sql);
                    PreparedStatement pst2 = myConn.prepareStatement(sql2);
                    pst.setString(1, SID.getText().trim());
                    pst.setString(2, SFN.getText().trim());
                    pst.setString(3, SLN.getText().trim());
                    pst.setString(4, SADD.getText().trim());
                    pst.setString(5, SPHONE.getText().trim());
                    pst.setString(6, SED.getText().trim());
                    pst2.setString(1, SID.getText().trim());
                    pst2.setString(2, FOWED.getText().trim());
                    pst2.setString(3, SAT.getText().trim());
                    pst.executeUpdate();
                    pst2.executeUpdate();
                    refreshTableData("Updated");
                } catch (Exception exc) {
                    JOptionPane.showMessageDialog(null, exc);
                }
            }
        }


    }//GEN-LAST:event_InsertActionPerformed

    private void SEDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SEDActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        SID.setText("");
        SFN.setText("");
        SLN.setText("");
        SADD.setText("");
        SPHONE.setText("");
        SED.setText("");
        FOWED.setText("");
        SAT.setText("");
    }//GEN-LAST:event_ResetActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        new Menu().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_BackActionPerformed

    private void SIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SIDActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        if (SID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "StudentID CAN NOT BE NULL!!!");
        } else {
            Connection myConn = getConnection();
            String sql = "update Student set StudentID = ?, StudentFName = ?, StudentLName = ?, Address = ?, PhoneNumber = ?, EnrollmenttDate = ? WHERE StudentID = ?";
            String sql2 = "update PaymentAndAttendance set StudentID = ?, Feesowed = ?, Attendance = ? WHERE StudentID = ?";

            Pattern pSID = Pattern.compile("\\d{1,6}");
            Matcher mSID = pSID.matcher(SID.getText());
            boolean isSIDValid = mSID.matches();

            Pattern pSFN = Pattern.compile("\\w{1,20}");
            Matcher mSFN = pSFN.matcher(SFN.getText());
            boolean isSFNValid = mSFN.matches();

            Pattern pSLN = Pattern.compile("\\w{1,20}");
            Matcher mSLN = pSLN.matcher(SLN.getText());
            boolean isSLNValid = mSLN.matches();

            Pattern pSADD = Pattern.compile(".{1,30}");
            Matcher mSADD = pSADD.matcher(SADD.getText());
            boolean isSADDValid = mSADD.matches();

            Pattern pSPHONE = Pattern.compile("\\d{1,10}");
            Matcher mSPHONE = pSPHONE.matcher(SPHONE.getText());
            boolean isSPHONEValid = mSPHONE.matches();

            Pattern pSED = Pattern.compile("^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$");
            Matcher mSED = pSED.matcher(SED.getText());
            boolean isSEDValid = mSED.matches();

            Pattern pFOWED = Pattern.compile("\\d{1,7}\\.?\\d{1,2}");
            Matcher mFOWED = pFOWED.matcher(FOWED.getText());
            boolean isFOWEDValid = mFOWED.matches();

            Pattern pSAT = Pattern.compile("\\d{1,3}\\%");
            Matcher mSAT = pSAT.matcher(SAT.getText());
            boolean isSATValid = mSAT.matches();

            if (isSIDValid) {
                SIDC.setText("Valid");
                SIDC.setForeground(Color.BLUE);
            } else {
                SIDC.setText("InValid (1 - 6 DECIMAL Only)");
                SIDC.setForeground(Color.red);
            }
            if (isSFNValid) {
                SFNC.setText("Valid");
                SFNC.setForeground(Color.BLUE);
            } else {
                SFNC.setText("InValid (1 - 20 Charactors Only)");
                SFNC.setForeground(Color.red);
            }
            if (isSLNValid) {
                SLNC.setText("Valid");
                SLNC.setForeground(Color.BLUE);
            } else {
                SLNC.setText("InValid (1 - 20 Charactors Only)");
                SLNC.setForeground(Color.red);
            }
            if (isSADDValid) {
                SADDC.setText("Valid");
                SADDC.setForeground(Color.BLUE);
            } else {
                SADDC.setText("InValid (1 - 30 Charactors Only)");
                SADDC.setForeground(Color.red);
            }
            if (isSPHONEValid) {
                SPHONEC.setText("Valid");
                SPHONEC.setForeground(Color.BLUE);
            } else {
                SPHONEC.setText("InValid (1 - 10 DECIMAL Only)");
                SPHONEC.setForeground(Color.red);
            }

            if (isSEDValid) {
                SEDC.setText("Valid");
                SEDC.setForeground(Color.BLUE);
            } else {
                SEDC.setText("The Foramating MUST BE YYYY-MM-DD)");
                SEDC.setForeground(Color.red);
            }

            if (isFOWEDValid) {
                FOWEDC.setText("Valid");
                FOWEDC.setForeground(Color.BLUE);
            } else {
                FOWEDC.setText("Maximum 7 integer and 2 decimal places");
                FOWEDC.setForeground(Color.red);
            }

            if (isSATValid) {
                SATC.setText("Valid");
                SATC.setForeground(Color.BLUE);
            } else {
                SATC.setText("Number + % Only");
                SATC.setForeground(Color.red);
            }

            if (isSPHONEValid && isSADDValid && isSLNValid && isSFNValid && isSIDValid && isSATValid && isFOWEDValid && isSEDValid) {

                try {
                    PreparedStatement pst = myConn.prepareStatement(sql);
                    PreparedStatement pst2 = myConn.prepareStatement(sql2);
                    pst.setString(1, SID.getText().trim());
                    pst.setString(2, SFN.getText().trim());
                    pst.setString(3, SLN.getText().trim());
                    pst.setString(4, SADD.getText().trim());
                    pst.setString(5, SPHONE.getText().trim());
                    pst.setString(6, SED.getText().trim());
                    pst.setString(7, SID.getText().trim());
                    pst2.setString(1, SID.getText().trim());
                    pst2.setString(2, FOWED.getText().trim());
                    pst2.setString(3, SAT.getText().trim());
                    pst2.setString(4, SID.getText().trim());
                    pst.executeUpdate();
                    pst2.executeUpdate();
                    refreshTableData("Updated");
                } catch (Exception exc) {
                    exc.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        Connection myConn = getConnection();
        String sql = "Delete From PaymentAndAttendance WHERE StudentID = ?";
        String sql2 = "Delete From Student WHERE StudentID = ?";
        String sql3 = "Delete From ExamsGradeBook WHERE StudentID = ?";
        String sql4 = "Delete From AssignmentsGradeBook WHERE StudentID = ?";
        try {
            PreparedStatement pst = myConn.prepareStatement(sql);
            PreparedStatement pst2 = myConn.prepareStatement(sql2);
            PreparedStatement pst3 = myConn.prepareStatement(sql3);
            PreparedStatement pst4 = myConn.prepareStatement(sql4);
            pst.setString(1, SID.getText().trim());
            pst2.setString(1, SID.getText().trim());
            pst3.setString(1, SID.getText().trim());
            pst4.setString(1, SID.getText().trim());
            pst3.executeUpdate();
            pst4.executeUpdate();
            pst.executeUpdate();
            pst2.executeUpdate();
            refreshTableData("Deleted!");
        } catch (Exception exc) {
            exc.printStackTrace();
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void FOWEDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FOWEDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FOWEDActionPerformed

    private void SATActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SATActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SATActionPerformed

    private void studentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentTableMouseClicked

        // Get The Index Of The Slected Row 
        int i = studentTable.getSelectedRow();

        TableModel model = studentTable.getModel();

        // Display Slected Row In JTexteFields
        SID.setText(model.getValueAt(i, 0).toString());

        SFN.setText(model.getValueAt(i, 1).toString());

        SLN.setText(model.getValueAt(i, 2).toString());

        SADD.setText(model.getValueAt(i, 3).toString());

        SPHONE.setText(model.getValueAt(i, 4).toString());

        SED.setText(model.getValueAt(i, 5).toString());

        FOWED.setText(model.getValueAt(i, 6).toString());

        SAT.setText(model.getValueAt(i, 7).toString());


    }//GEN-LAST:event_studentTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddAndEditStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddAndEditStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddAndEditStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddAndEditStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddAndEditStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Delete;
    private javax.swing.JTextField FOWED;
    private javax.swing.JLabel FOWEDC;
    private javax.swing.JButton Insert;
    private javax.swing.JButton Reset;
    private javax.swing.JTextField SADD;
    private javax.swing.JLabel SADDC;
    private javax.swing.JTextField SAT;
    private javax.swing.JLabel SATC;
    private javax.swing.JTextField SED;
    private javax.swing.JLabel SEDC;
    private javax.swing.JTextField SFN;
    private javax.swing.JLabel SFNC;
    private javax.swing.JTextField SID;
    private javax.swing.JLabel SIDC;
    private javax.swing.JTextField SLN;
    private javax.swing.JLabel SLNC;
    private javax.swing.JTextField SPHONE;
    private javax.swing.JLabel SPHONEC;
    private javax.swing.JButton Update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable studentTable;
    // End of variables declaration//GEN-END:variables

}
